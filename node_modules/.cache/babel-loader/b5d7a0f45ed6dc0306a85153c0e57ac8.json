{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prasa\\\\Desktop\\\\origin\\\\src\\\\Slider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { css, jsx } from '@emotion/core';\nimport SliderContent from './SliderContent';\nimport Slide from './Slide';\nimport Arrow from './Arrow';\nimport Dots from './Dots';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst getWidth = () => window.innerWidth;\n/**\r\n * @function Slider\r\n */\n\n\nconst Slider = props => {\n  _s();\n\n  const [state, setState] = useState({\n    activeIndex: 0,\n    translate: 0,\n    transition: 0.45\n  });\n  const {\n    translate,\n    transition,\n    activeIndex\n  } = state;\n  const autoPlayRef = useRef();\n  useEffect(() => {\n    autoPlayRef.current = nextSlide;\n  });\n  useEffect(() => {\n    const play = () => {\n      autoPlayRef.current();\n    };\n\n    const interval = setInterval(play, props.autoPlay * 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const nextSlide = () => {\n    if (activeIndex === props.slides.length - 1) {\n      return setState({ ...state,\n        translate: 0,\n        activeIndex: 0\n      });\n    }\n\n    setState({ ...state,\n      activeIndex: activeIndex + 1,\n      translate: (activeIndex + 1) * getWidth()\n    });\n  };\n\n  const prevSlide = () => {\n    if (activeIndex === 0) {\n      return setState({ ...state,\n        translate: (props.slides.length - 1) * getWidth(),\n        activeIndex: props.slides.length - 1\n      });\n    }\n\n    setState({ ...state,\n      activeIndex: activeIndex - 1,\n      translate: (activeIndex - 1) * getWidth()\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    css: SliderCSS,\n    children: [/*#__PURE__*/_jsxDEV(SliderContent, {\n      translate: translate,\n      transition: transition,\n      width: getWidth() * props.slides.length,\n      children: props.slides.map((slide, i) => /*#__PURE__*/_jsxDEV(Slide, {\n        content: slide\n      }, slide + i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), !props.autoPlay && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Arrow, {\n        direction: \"left\",\n        handleClick: prevSlide\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Arrow, {\n        direction: \"right\",\n        handleClick: nextSlide\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(Dots, {\n      slides: props.slides,\n      activeIndex: activeIndex\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Slider, \"j5SaXVTIPQIVSLlk0XHc2HI/LBI=\");\n\n_c = Slider;\nSlider.defaultProps = {\n  slides: [],\n  autoPlay: null\n};\nconst SliderCSS = css`\n  position: relative;\n  height: 100vh;\n  width: 100vw;\n  margin: 0 auto;\n  overflow: hidden;\n`;\nexport default Slider;\n\nvar _c;\n\n$RefreshReg$(_c, \"Slider\");","map":{"version":3,"sources":["C:/Users/prasa/Desktop/origin/src/Slider.js"],"names":["React","useState","useEffect","useRef","css","jsx","SliderContent","Slide","Arrow","Dots","getWidth","window","innerWidth","Slider","props","state","setState","activeIndex","translate","transition","autoPlayRef","current","nextSlide","play","interval","setInterval","autoPlay","clearInterval","slides","length","prevSlide","SliderCSS","map","slide","i","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\nimport { css, jsx } from '@emotion/core'\r\nimport SliderContent from './SliderContent'\r\nimport Slide from './Slide'\r\nimport Arrow from './Arrow'\r\nimport Dots from './Dots'\r\n\r\nconst getWidth = () => window.innerWidth\r\n\r\n/**\r\n * @function Slider\r\n */\r\nconst Slider = props => {\r\n  const [state, setState] = useState({\r\n    activeIndex: 0,\r\n    translate: 0,\r\n    transition: 0.45\r\n  })\r\n  const { translate, transition, activeIndex } = state\r\n  const autoPlayRef = useRef()\r\n\r\n  useEffect(() => {\r\n    autoPlayRef.current = nextSlide\r\n  })\r\n\r\n  useEffect(() => {\r\n    const play = () => {\r\n      autoPlayRef.current()\r\n    }\r\n\r\n    const interval = setInterval(play, props.autoPlay * 1000)\r\n    return () => clearInterval(interval)\r\n  }, [])\r\n\r\n  const nextSlide = () => {\r\n    if (activeIndex === props.slides.length - 1) {\r\n      return setState({\r\n        ...state,\r\n        translate: 0,\r\n        activeIndex: 0\r\n      })\r\n    }\r\n\r\n    setState({\r\n      ...state,\r\n      activeIndex: activeIndex + 1,\r\n      translate: (activeIndex + 1) * getWidth()\r\n    })\r\n  }\r\n\r\n  const prevSlide = () => {\r\n    if (activeIndex === 0) {\r\n      return setState({\r\n        ...state,\r\n        translate: (props.slides.length - 1) * getWidth(),\r\n        activeIndex: props.slides.length - 1\r\n      })\r\n    }\r\n\r\n    setState({\r\n      ...state,\r\n      activeIndex: activeIndex - 1,\r\n      translate: (activeIndex - 1) * getWidth()\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div css={SliderCSS}>\r\n      <SliderContent\r\n        translate={translate}\r\n        transition={transition}\r\n        width={getWidth() * props.slides.length}\r\n      >\r\n        {props.slides.map((slide, i) => (\r\n          <Slide key={slide + i} content={slide} />\r\n        ))}\r\n      </SliderContent>\r\n\r\n      {!props.autoPlay && (\r\n        <>\r\n          <Arrow direction=\"left\" handleClick={prevSlide} />\r\n          <Arrow direction=\"right\" handleClick={nextSlide} />\r\n        </>\r\n      )}\r\n\r\n      <Dots slides={props.slides} activeIndex={activeIndex} />\r\n    </div>\r\n  )\r\n}\r\n\r\nSlider.defaultProps = {\r\n  slides: [],\r\n  autoPlay: null\r\n}\r\n\r\nconst SliderCSS = css`\r\n  position: relative;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  margin: 0 auto;\r\n  overflow: hidden;\r\n`\r\n\r\nexport default Slider"]},"metadata":{},"sourceType":"module"}